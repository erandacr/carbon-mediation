/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.wso2.carbon.mediator.datamapper.engine.output;

import org.wso2.carbon.mediator.datamapper.engine.core.exceptions.SchemaException;
import org.wso2.carbon.mediator.datamapper.engine.core.exceptions.WriterException;
import org.wso2.carbon.mediator.datamapper.engine.core.models.Model;
import org.wso2.carbon.mediator.datamapper.engine.core.notifiers.OutputVariableNotifier;
import org.wso2.carbon.mediator.datamapper.engine.core.schemas.Schema;
import org.wso2.carbon.mediator.datamapper.engine.output.formatters.XMLMapOutputFormatter;

/**
 * Class to manage the output XML message building process
 */
public class OutputXMLMessageBuilder {

    private XMLMapOutputFormatter formatter;
    private Schema outputSchema;
    private OutputVariableNotifier outputVariableNotifier;

    /**
     * Constructor, to generate a new XML formatter and take the reference of the output schema
     * @param outputSchema
     * @throws SchemaException
     * @throws WriterException
     */
    public OutputXMLMessageBuilder(Schema outputSchema) throws SchemaException, WriterException {
        this.outputSchema = outputSchema;
        this.formatter = new XMLMapOutputFormatter();
    }

    /**
     * Build output XML message using the output of the script engine
     *
     * @param outputModel Map models that was generated by the script engine
     * @param mappingHandler Reference of Mapping handler in order to return the result
     * @throws SchemaException
     * @throws WriterException
     */
    public void buildOutputMessage(Model outputModel, OutputVariableNotifier mappingHandler)
            throws SchemaException, WriterException {
        this.outputVariableNotifier = mappingHandler;
        this.formatter.format(outputModel, this, outputSchema);
    }

    /**
     * Method to pass the result to the mapping handler
     * @param builtMessage built XML output message as a String
     */
    public void notifyWithResult(String builtMessage) {
        outputVariableNotifier.notifyOutputVariable(builtMessage);
    }
}
